install.packages("forecast")
install.packages("ade4")
install.packages("forecastHybrid")
install.packages("e1071")
library(forecast)
library(ade4)
library(e1071)
library(ggplot2)
library("rpart")
library("rpart.plot")
mydata = read.csv("C:\\Users\\lahar\\Desktop\\Nayan ADS\\Mid Project\\train.csv")
mydata <- dataset
dataclean1<-mydata[, -which(colMeans(is.na(mydata)) > .6)]
dataset = read.csv("C:\\Users\\lahar\\Desktop\\Nayan ADS\\Mid Project\\train.csv")
mydata <- dataset
dataclean1<-mydata[, -which(colMeans(is.na(mydata)) > .6)]
mydata$Id <- NULL
removedcoumns<-mydata[,which(colMeans(is.na(mydata)) > 0.6)]
missingvalues <- c(unlist(lapply(dataclean1, function(x) any(is.na(x)))))
View(missingvalues)
dataclean1$Employment_Info_1[is.na(dataclean1$Employment_Info_1)] <- mean(dataclean1$Employment_Info_1, na.rm = T)
dataclean1$Employment_Info_4[is.na(dataclean1$Employment_Info_4)] <- mean(dataclean1$Employment_Info_4, na.rm = T)
dataclean1$Employment_Info_6[is.na(dataclean1$Employment_Info_6)] <- mean(dataclean1$Employment_Info_6, na.rm = T)
dataclean1$Insurance_History_5[is.na(dataclean1$Insurance_History_5)] <- mean(dataclean1$Insurance_History_5, na.rm = T)
dataclean1$Family_Hist_2[is.na(dataclean1$Family_Hist_2)] <- mean(dataclean1$Family_Hist_2, na.rm = T)
dataclean1$Family_Hist_4[is.na(dataclean1$Family_Hist_4)] <- mean(dataclean1$Family_Hist_4, na.rm = T)
dataclean1$Medical_History_1[is.na(dataclean1$Medical_History_1)] <- mean(dataclean1$Medical_History_1, na.rm = T)
dataclean1$Family_Hist_3[is.na(dataclean1$Family_Hist_3)] <- mean(dataclean1$Family_Hist_3, na.rm = T)
Categorical_data <- mydata[,c("Medical_History_1","Product_Info_1", "Product_Info_2", "Product_Info_3", "Product_Info_5", "Product_Info_6", "Product_Info_7", "Employment_Info_2", "Employment_Info_3", "Employment_Info_5", "InsuredInfo_1", "InsuredInfo_2", "InsuredInfo_3", "InsuredInfo_4", "InsuredInfo_5", "InsuredInfo_6", "InsuredInfo_7", "Insurance_History_1", "Insurance_History_2", "Insurance_History_3", "Insurance_History_4", "Insurance_History_7", "Insurance_History_8", "Insurance_History_9", "Family_Hist_1", "Medical_History_2", "Medical_History_3", "Medical_History_4", "Medical_History_5", "Medical_History_6", "Medical_History_7", "Medical_History_8", "Medical_History_9", "Medical_History_11", "Medical_History_12", "Medical_History_13", "Medical_History_14", "Medical_History_16", "Medical_History_17", "Medical_History_18", "Medical_History_19", "Medical_History_20", "Medical_History_21", "Medical_History_22", "Medical_History_23", "Medical_History_25", "Medical_History_26", "Medical_History_27", "Medical_History_28", "Medical_History_29", "Medical_History_30", "Medical_History_31", "Medical_History_33", "Medical_History_34", "Medical_History_35", "Medical_History_36", "Medical_History_37", "Medical_History_38", "Medical_History_39", "Medical_History_40", "Medical_History_41")]
converted_data <- acm.disjonctif(Categorical_data)
Continuous_data <- mydata[c("Product_Info_4", "Ins_Age", "Ht", "Wt", "BMI", "Employment_Info_1", "Employment_Info_4", "Employment_Info_6", "Insurance_History_5", "Family_Hist_2", "Family_Hist_4")]
data_dummy<-mydata[c("Medical_Keyword_1","Medical_Keyword_2","Medical_Keyword_3","Medical_Keyword_4","Medical_Keyword_5","Medical_Keyword_6","Medical_Keyword_7","Medical_Keyword_8","Medical_Keyword_9","Medical_Keyword_10","Medical_Keyword_11","Medical_Keyword_12","Medical_Keyword_13","Medical_Keyword_14","Medical_Keyword_15","Medical_Keyword_16","Medical_Keyword_17","Medical_Keyword_18","Medical_Keyword_19", "Medical_Keyword_20", "Medical_Keyword_21", "Medical_Keyword_22", "Medical_Keyword_23","Medical_Keyword_24", "Medical_Keyword_25", "Medical_Keyword_26", "Medical_Keyword_27", "Medical_Keyword_28", "Medical_Keyword_29","Medical_Keyword_30", "Medical_Keyword_31", "Medical_Keyword_32", "Medical_Keyword_33","Medical_Keyword_34", "Medical_Keyword_35","Medical_Keyword_36", "Medical_Keyword_37", "Medical_Keyword_38", "Medical_Keyword_39", "Medical_Keyword_40", "Medical_Keyword_41", "Medical_Keyword_42", "Medical_Keyword_43", "Medical_Keyword_44", "Medical_Keyword_45","Medical_Keyword_46", "Medical_Keyword_47","Medical_Keyword_48")]
Merged_data <- data.frame(c(converted_data, data_cntg,data_dummy))
pcadata <- prcomp(merged_data)
prudentialData = read.csv('C:\\Users\\lahar\\Desktop\\Nayan ADS\\Mid Project\\train.csv',header = TRUE)
data <- prudentialData
data <- data[,-c(1,38,48,53,62,70)]
data$Employment_Info_1 <- ifelse(is.na(data$Employment_Info_1), ave(data$Employment_Info_1,
FUN=function(x) mean(x, na.rm = TRUE)), data$Employment_Info_1)
data$Employment_Info_4 <- ifelse(is.na(data$Employment_Info_4), ave(data$Employment_Info_4,
FUN=function(x) mean(x, na.rm = TRUE)), data$Employment_Info_4)
data$Employment_Info_6 <- ifelse(is.na(data$Employment_Info_6), ave(data$Employment_Info_6,
FUN=function(x) mean(x, na.rm = TRUE)), data$Employment_Info_6)
data$Insurance_History_5 <- ifelse(is.na(data$Insurance_History_5), ave(data$Insurance_History_5,
FUN=function(x) mean(x, na.rm = TRUE)),data$Insurance_History_5)
data$Family_Hist_2 <- ifelse(is.na(data$Family_Hist_2), ave(data$Family_Hist_2,
FUN=function(x) mean(x, na.rm = TRUE)), data$Family_Hist_2)
data$Family_Hist_3 <- ifelse(is.na(data$Family_Hist_3), ave(data$Family_Hist_3,
FUN=function(x) mean(x, na.rm = TRUE)), data$Family_Hist_3)
data$Family_Hist_4 <- ifelse(is.na(data$Family_Hist_4), ave(data$Family_Hist_4,
FUN=function(x) mean(x, na.rm = TRUE)), data$Family_Hist_4)
data$Medical_History_1 <- ifelse(is.na(data$Medical_History_1), ave(data$Medical_History_1,
FUN=function(x) mean(x, na.rm = TRUE)), data$Medical_History_1)
categoricalfunc <- function(data, Columnname){
for(level in unique(data[[Columnname]])){
data[paste(Columnname,seq = "_",level)]<- ifelse(data[[Columnname]] == level,1,0)
}
return(subset(data,select = -get(Columnname)))
}
data <- categoricalfunc(data, "Product_Info_1")
data <- categoricalfunc(data, "Product_Info_2")
data <- categoricalfunc(data, "Product_Info_5")
data <- categoricalfunc(data, "Product_Info_6")
data <- categoricalfunc(data, "Product_Info_7")
data <- categoricalfunc(data, "Employment_Info_3")
data <- categoricalfunc(data, "Employment_Info_5")
data <- categoricalfunc(data, "InsuredInfo_1")
data <- categoricalfunc(data, "InsuredInfo_2")
data <- categoricalfunc(data, "InsuredInfo_3")
data <- categoricalfunc(data, "InsuredInfo_4")
data <- categoricalfunc(data, "InsuredInfo_5")
data <- categoricalfunc(data, "InsuredInfo_6")
data <- categoricalfunc(data, "InsuredInfo_7")
data <- categoricalfunc(data, "Insurance_History_1")
data <- categoricalfunc(data, "Insurance_History_2")
data <- categoricalfunc(data, "Insurance_History_3")
data <- categoricalfunc(data, "Insurance_History_4")
data <- categoricalfunc(data, "Insurance_History_7")
data <- categoricalfunc(data, "Insurance_History_8")
data <- categoricalfunc(data, "Insurance_History_9")
data <- categoricalfunc(data, "Family_Hist_1")
data <- categoricalfunc(data, "Medical_History_3")
data <- categoricalfunc(data, "Medical_History_4")
data <- categoricalfunc(data, "Medical_History_5")
data <- categoricalfunc(data, "Medical_History_6")
data <- categoricalfunc(data, "Medical_History_7")
data <- categoricalfunc(data, "Medical_History_8")
data <- categoricalfunc(data, "Medical_History_9")
data <- categoricalfunc(data, "Medical_History_11")
data <- categoricalfunc(data, "Medical_History_12")
data <- categoricalfunc(data, "Medical_History_13")
data <- categoricalfunc(data, "Medical_History_14")
data <- categoricalfunc(data, "Medical_History_16")
data <- categoricalfunc(data, "Medical_History_17")
data <- categoricalfunc(data, "Medical_History_18")
data <- categoricalfunc(data, "Medical_History_19")
data <- categoricalfunc(data, "Medical_History_20")
data <- categoricalfunc(data, "Medical_History_21")
data <- categoricalfunc(data, "Medical_History_22")
data <- categoricalfunc(data, "Medical_History_23")
data <- categoricalfunc(data, "Medical_History_25")
data <- categoricalfunc(data, "Medical_History_26")
data <- categoricalfunc(data, "Medical_History_27")
data <- categoricalfunc(data, "Medical_History_28")
data <- categoricalfunc(data, "Medical_History_29")
data <- categoricalfunc(data, "Medical_History_30")
data <- categoricalfunc(data, "Medical_History_31")
data <- categoricalfunc(data, "Medical_History_33")
data <- categoricalfunc(data, "Medical_History_34")
data <- categoricalfunc(data, "Medical_History_35")
data <- categoricalfunc(data, "Medical_History_36")
data <- categoricalfunc(data, "Medical_History_37")
data <- categoricalfunc(data, "Medical_History_38")
data <- categoricalfunc(data, "Medical_History_39")
data <- categoricalfunc(data, "Medical_History_40")
data <- categoricalfunc(data, "Medical_History_41")
summary(data[,121:180])
Finaldata <- data[-(50001:59382)]
write.csv(Finaldata, file = "C:\\Users\\avina\\Desktop\\prudential data\\Prudential_Cleaned.csv", row.names = FALSE)
write.csv(Finaldata, file = "C:\\Users\\lahar\\Desktop\\Nayan ADS\\Mid Project\\Prudential_Cleaned.csv", row.names = FALSE)
install.packages("caret")
install.packages("e1071")
install.packages("Lahman")
install.packages("plyr")
library(caret)
library(e1071)
library(Lahman)
library(dplyr)
library(randomForest)
dataset <- read.csv('C:\\Users\\lahar\\Desktop\\Prudential_Cleaned.csv',header = TRUE)
dataset
sample_index = sample(500, 100)
test_dateset = dataset[sample_index,]
sample_index1 = sample(1000, 200)
train_dateset = dataset[sample_index1,]
test_dateset
train_dateset
svm.fit<- svm(Response~., data=train_dateset,scale = TRUE)
summary(svm.fit)
predict.svm<- predict(svm.fit,test_dateset)
rf<-randomForest(Response~.,data=train_dateset,importance=TRUE,ntree=100)
imp<- importance(rf, type=1)
imp
dataset <- read.csv('C:\\Users\\lahar\\Desktop\\Prudential_Cleaned.csv',header = TRUE)
dataset
sample_index = sample(500, 100)
test_dateset = dataset[sample_index,]
sample_index1 = sample(1000, 200)
train_dateset = dataset[sample_index1,]
test_dateset
train_dateset
svm.fit<- svm(Response~., data=train_dateset,scale = TRUE)
summary(svm.fit)
predict.svm<- predict(svm.fit,test_dateset)
rf<-randomForest(Response~.,data=train_dateset,importance=TRUE,ntree=100)
imp<- importance(rf, type=1)
imp
imp<-data.frame(predictors=rownames(imp), imp)
library(caret)
library(e1071)
library(Lahman)
library(dplyr)
library(randomForest)
dataset <- read.csv('C:\\Users\\lahar\\Desktop\\Prudential_Cleaned.csv',header = TRUE)
dataset
sample_index = sample(500, 100)
test_dateset = dataset[sample_index,]
sample_index1 = sample(1000, 200)
train_dateset = dataset[sample_index1,]
test_dateset
train_dateset
svm.fit<- svm(Response~., data=train_dateset,scale = TRUE)
summary(svm.fit)
predict.svm<- predict(svm.fit,test_dateset)
rf<-randomForest(Response~.,data=train_dateset,importance=TRUE,ntree=100)
imp<- importance(rf, type=1)
imp
imp<-data.frame(predictors=rownames(imp), imp)
imp.sort<- arrange(imp,desc(X.IncMSE))
imp.sort$predictors <- factor(imp.sort$predictors, level= imp.sort$predictors)
imp.20<- imp.sort[1:20,]
print(imp.20)
tuned <-tune.svm(Response~Medical_Keyword_3+BMI+Medical_History_28._.1+Medical_History_28._.2+Insurance_History_2._.1+Insurance_History_2._.3+Wt+Medical_History_39._.1+Medical_History_1+Product_Info_4+Medical_Keyword_34+ InsuredInfo_5._.1, data = train_dateset, gamma = 10^(-1:1), cost = 10^(.5:1))
summary(tuned)
model = svm(Response ~. , kernel = "radial", cost =10, gamma =0.1, data = train_dateset, scale = F)
predictions <-  predict(model, test_dateset[-65])
predictions
newpred<-round(predictions)
newpred
matpred<-as.matrix(newpred)
matpred
test_dateset[65]
xtable<-table(test_dateset[,65], newpred)
xtable
library(caret)
library(ggplot2)
confusionMatrix(test_dateset[,65], matpred)
library(caret)
library(e1071)
library(Lahman)
library(dplyr)
library(randomForest)
dataset <- read.csv('C:\\Users\\lahar\\Desktop\\Prudential_Cleaned.csv',header = TRUE)
dataset
sample_index = sample(500, 500)
test_dateset = dataset[sample_index,]
sample_index1 = sample(1000, 1000)
train_dateset = dataset[sample_index1,]
test_dateset
train_dateset
svm.fit<- svm(Response~., data=train_dateset,scale = TRUE)
summary(svm.fit)
predict.svm<- predict(svm.fit,test_dateset)
rf<-randomForest(Response~.,data=train_dateset,importance=TRUE,ntree=100)
imp<- importance(rf, type=1)
imp
imp<-data.frame(predictors=rownames(imp), imp)
imp.sort<- arrange(imp,desc(X.IncMSE))
imp.sort$predictors <- factor(imp.sort$predictors, level= imp.sort$predictors)
imp.20<- imp.sort[1:20,]
print(imp.20)
tuned <-tune.svm(Response~Medical_Keyword_3+BMI+Medical_History_28._.1+Medical_History_28._.2+Insurance_History_2._.1+Insurance_History_2._.3+Wt+Medical_History_39._.1+Medical_History_1+Product_Info_4+Medical_Keyword_34+ InsuredInfo_5._.1, data = train_dateset, gamma = 10^(-1:1), cost = 10^(.5:1))
summary(tuned)
model = svm(Response ~. , kernel = "radial", cost =10, gamma =0.1, data = train_dateset, scale = F)
predictions <-  predict(model, test_dateset[-65])
predictions
newpred<-round(predictions)
newpred
matpred<-as.matrix(newpred)
matpred
test_dateset[65]
xtable<-table(test_dateset[,65], newpred)
xtable
library(caret)
library(ggplot2)
confusionMatrix(test_dateset[,65], matpred)
library(caret)
library(e1071)
library(Lahman)
library(dplyr)
library(randomForest)
dataset <- read.csv('C:\\Users\\lahar\\Desktop\\Prudential_Cleaned.csv',header = TRUE)
dataset
sample_index = sample(500, 100)
test_dateset = dataset[sample_index,]
library(caret)
library(e1071)
library(Lahman)
library(dplyr)
library(caret)
library(e1071)
library(Lahman)
library(dplyr)
library(randomForest)
dataset <- read.csv('C:\\Users\\lahar\\Desktop\\Prudential_Cleaned.csv',header = TRUE)
dataset
sample_index = sample(500, 100)
test_dateset = dataset[sample_index,]
sample_index1 = sample(1000, 600)
train_dateset = dataset[sample_index1,]
test_dateset
train_dateset
svm.fit<- svm(Response~., data=train_dateset,scale = TRUE)
summary(svm.fit)
predict.svm<- predict(svm.fit,test_dateset)
rf<-randomForest(Response~.,data=train_dateset,importance=TRUE,ntree=100)
imp<- importance(rf, type=1)
imp
imp<-data.frame(predictors=rownames(imp), imp)
imp.sort<- arrange(imp,desc(X.IncMSE))
imp.sort$predictors <- factor(imp.sort$predictors, level= imp.sort$predictors)
imp.20<- imp.sort[1:20,]
print(imp.20)
tuned <-tune.svm(Response~Medical_Keyword_3+BMI+Medical_History_28._.1+Medical_History_28._.2+Insurance_History_2._.1+Insurance_History_2._.3+Wt+Medical_History_39._.1+Medical_History_1+Product_Info_4+Medical_Keyword_34+ InsuredInfo_5._.1, data = train_dateset, gamma = 10^(-1:1), cost = 10^(.5:1))
summary(tuned)
model = svm(Response ~. , kernel = "radial", cost =10, gamma =0.1, data = train_dateset, scale = F)
predictions <-  predict(model, test_dateset[-65])
predictions
newpred<-round(predictions)
newpred
matpred<-as.matrix(newpred)
matpred
test_dateset[65]
xtable<-table(test_dateset[,65], newpred)
xtable
library(caret)
library(ggplot2)
confusionMatrix(test_dateset[,65], matpred)
install.packages("caret")
install.packages("caret")
install.packages("e1071")
install.packages("e1071")
library(caret)
library(e1071)
install.packages("caret")
install.packages("caret")
install.packages("e1071")
install.packages("Lahman")
install.packages("plyr")
library(caret)
library(e1071)
library(Lahman)
library(dplyr)
library(randomForest)
dataset <- read.csv('C:\\Users\\lahar\\Desktop\\Prudential_Cleaned.csv',header = TRUE)
dataset
sample_index = sample(500, 100)
test_dateset = dataset[sample_index,]
sample_index1 = sample(800, 600)
train_dateset = dataset[sample_index1,]
test_dateset
train_dateset
svm.fit<- svm(Response~., data=train_dateset,scale = TRUE)
summary(svm.fit)
predict.svm<- predict(svm.fit,test_dateset)
rf<-randomForest(Response~.,data=train_dateset,importance=TRUE,ntree=100)
imp<- importance(rf, type=1)
imp
imp<-data.frame(predictors=rownames(imp), imp)
imp.sort<- arrange(imp,desc(X.IncMSE))
imp.sort$predictors <- factor(imp.sort$predictors, level= imp.sort$predictors)
imp.20<- imp.sort[1:20,]
print(imp.20)
tuned <-tune.svm(Response~Medical_Keyword_3+BMI+Medical_History_28._.1+Medical_History_28._.2+Insurance_History_2._.1+Insurance_History_2._.3+Wt+Medical_History_39._.1+Medical_History_1+Product_Info_4+Medical_Keyword_34+ InsuredInfo_5._.1, data = train_dateset, gamma = 10^(-1:1), cost = 10^(.5:1))
summary(tuned)
model = svm(Response ~. , kernel = "radial", cost =10, gamma =0.1, data = train_dateset, scale = F)
predictions <-  predict(model, test_dateset[-65])
predictions
newpred<-round(predictions)
newpred
matpred<-as.matrix(newpred)
matpred
test_dateset[65]
xtable<-table(test_dateset[,65], newpred)
xtable
library(caret)
library(ggplot2)
confusionMatrix(test_dateset[,65], matpred)
library(caret)
library(e1071)
library(Lahman)
library(dplyr)
library(randomForest)
dataset <- read.csv('C:\\Users\\lahar\\Desktop\\Prudential_Cleaned.csv',header = TRUE)
dataset
sample_index = sample(500, 100)
test_dateset = dataset[sample_index,]
sample_index1 = sample(800, 400)
train_dateset = dataset[sample_index1,]
test_dateset
train_dateset
svm.fit<- svm(Response~., data=train_dateset,scale = TRUE)
summary(svm.fit)
predict.svm<- predict(svm.fit,test_dateset)
rf<-randomForest(Response~.,data=train_dateset,importance=TRUE,ntree=100)
imp<- importance(rf, type=1)
imp
imp<-data.frame(predictors=rownames(imp), imp)
imp.sort<- arrange(imp,desc(X.IncMSE))
imp.sort$predictors <- factor(imp.sort$predictors, level= imp.sort$predictors)
imp.20<- imp.sort[1:20,]
print(imp.20)
tuned <-tune.svm(Response~Medical_Keyword_3+BMI+Medical_History_28._.1+Medical_History_28._.2+Insurance_History_2._.1+Insurance_History_2._.3+Wt+Medical_History_39._.1+Medical_History_1+Product_Info_4+Medical_Keyword_34+ InsuredInfo_5._.1, data = train_dateset, gamma = 10^(-1:1), cost = 10^(.5:1))
summary(tuned)
model = svm(Response ~. , kernel = "radial", cost =10, gamma =0.1, data = train_dateset, scale = F)
predictions <-  predict(model, test_dateset[-65])
predictions
newpred<-round(predictions)
newpred
matpred<-as.matrix(newpred)
matpred
test_dateset[65]
xtable<-table(test_dateset[,65], newpred)
xtable
library(caret)
library(ggplot2)
confusionMatrix(test_dateset[,65], matpred)
resp <- test_dateset$Response
error <- matpred-resp
rmse <- function(error)
{
sqrt(mean(error^2))
}
rmse <- function(matpred, resp)
{
sqrt(mean((matpred-resp)^2))
}
rmse(matpred, resp)
